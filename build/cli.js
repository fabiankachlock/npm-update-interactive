"use strict";const g=require("node:child_process"),m=require("semver"),i=require("node:fs"),c=require("node:path"),u=require("prompts-ncu"),f=(n,e)=>{const o=`${e} ${e==="yarn"?"info":"view"} ${n} versions --json`,t=g.execSync(o,{encoding:"utf-8"}),l=JSON.parse(t);return m.rsort(l)},v=n=>{let e=n??c.join(process.cwd(),"package.json");for(;e;){if(i.existsSync(e))return e;const s=c.normalize(c.join(c.dirname(e),".."));if(s===n)return;n=s}},k=(n,e)=>{const s=c.join(c.dirname(n),"node_modules"),t=[...require.resolve.paths(e)??[],s];for(const l of t){const r=c.join(l,e,"package.json");if(i.existsSync(r))return r}},y=n=>{try{const e=i.readFileSync(n,"utf-8"),{packageManager:s}=JSON.parse(e);if(s){const[t]=s.split("@");return t}const o=c.dirname(n);if(i.existsSync(c.join(o,"pnpm-lock.yaml")))return"pnpm";if(i.existsSync(c.join(o,"yarn.lock")))return"yarn";if(i.existsSync(c.join(o,"package-lock.json")))return"npm"}catch{}return"npm"},h=n=>{const e=v(n);if(!e)return;const s=i.readFileSync(e,"utf-8"),{dependencies:o={},devDependencies:t={}}=JSON.parse(s);return{dependencies:Object.entries(o).concat(Object.entries(t)).map(([r,a])=>{try{const p=k(e,r),d=p&&i.readFileSync(p,"utf-8");return{name:r,version:a,installedVersion:JSON.parse(d??"").version}}catch{return{name:r,version:a}}}),packageJsonPath:e,packageManager:y(e)}};(async()=>{console.log("## npm-update-interactive ##");const{dependencies:n,packageJsonPath:e,packageManager:s}=h(),o={};for(;;){const{value:t}=await u({type:"autocomplete",name:"value",message:"Select a package to update",choices:n.map(a=>({title:`${a.name}@${a.version} (${a.installedVersion})`,value:a.name})).concat({title:"Exit",value:"exit"})});if(t==="exit")break;if(!t)return;const l=f(t,s),{version:r}=await u({type:"autocomplete",name:"version",message:`Select a version to update ${t}`,choices:l.map(a=>({title:a,value:a}))});if(!r)return;o[t]=r}console.log("## Updates ##"),console.log(o)})();
//# sourceMappingURL=cli.js.map
